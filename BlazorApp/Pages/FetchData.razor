@page "/fetchdata"

@using BlazorApp.Data
@using Microsoft.AspNetCore.Mvc;
@using DAL.Owner_Parameters;
@using ClassLibrary1.Interfaces.IServices;
@using ClassLibrary1.Entities;
@using BlazorApp.Services;
@using BlazorApp.Models;
@using BLL.DTO;
@inject ProductService productService

<h1>Products</h1>

<p>The best products in the world</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.productName</td>
                    <td>@product.price</td>
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="PrevPage">Prev</button>
    <span>@pageNum</span>
    <button @onclick="NextPage">Next</button>
}

@code {
    List<ProductView> products;
    private int pageNum = 1;
    private int pageSize = 2;
    protected override async Task OnInitializedAsync()
    {
        products = await productService.GetAll(new PagingParameters { PageNumber = pageNum, PageSize = pageSize });
    }
    public async Task NextPage()
    {
        pageNum++;
        products = await productService.GetAll(new PagingParameters { PageNumber = pageNum, PageSize = pageSize });
    }
    public async Task PrevPage()
    {
        if (pageNum > 1)
        {
            pageNum--;
            products = await productService.GetAll(new PagingParameters { PageNumber = pageNum, PageSize = pageSize });
        }
    }
}
